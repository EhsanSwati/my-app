{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","Text","setText","style","color","Heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","toLowerCase","str","split","i","length","charAt","slice","join","trim","Alert","alert","role","word","lower","capitalize","msg","App","setMode","setAlert","showAlert","message","setTimeout","document","body","AboutText","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.97882f36.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">\r\n          {props.title}\r\n        </Link> */}\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" to=\"/about\">\r\n                {props.AboutText}\r\n              </Link> */}\r\n            </li>\r\n          </ul>\r\n\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              type=\"checkbox\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode}\r\n            />\r\n            <label\r\n              className=\"form-check-label \"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            >\r\n              Enable Dark-Mode\r\n            </label>\r\n          </div>\r\n\r\n          {/* <------------------- Comment of Green button ----------------> */}\r\n          {/* <div\r\n            className={`form-check form-switch mx-3 text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            }`}\r\n          >\r\n            <button\r\n              type=\"button\"\r\n              class=\"btn btn-success\"\r\n              onClick={props.toggleMode1}\r\n            >\r\n              Green\r\n            </button>\r\n            <label\r\n              className=\"form-check-label \"\r\n              htmlFor=\"flexSwitchCheckDefault\"\r\n            ></label>\r\n          </div> */}\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string,\r\n  AboutText: PropTypes.string,\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    let newText = Text.toUpperCase();\r\n    setText(newText);\r\n    // setText(\"You have click the  handleUpClick function\");\r\n  };\r\n  const handleDownClick = () => {\r\n    let newText = Text.toLowerCase();\r\n    setText(newText);\r\n    // setText(\"You have click the  handleUpClick function\");\r\n  };\r\n\r\n  const handleClearClick = () => {\r\n    let newText = Text.charAt(-1);\r\n    setText(newText);\r\n    // setText(\"You have click the  handleUpClick function\");\r\n  };\r\n\r\n  const handleTitleClick = () => {\r\n    var toTitleCase = function (str) {\r\n      str = str.toLowerCase().split(\" \");\r\n      for (var i = 0; i < str.length; i++) {\r\n        str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\r\n      }\r\n      return str.join(\" \");\r\n    };\r\n\r\n    setText(toTitleCase);\r\n\r\n    // setText(\"You have click the  handleUpClick function\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    setText(event.target.value);\r\n  };\r\n  const [Text, setText] = useState(\"\");\r\n  //   setText(\"New Text\");\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"container\"\r\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\r\n        // style={{ color: props.mode === \"dark\" ? \"black\" : \"white\" }}\r\n      >\r\n        <h1>{props.Heading}</h1>\r\n        <div className=\"mb-3\">\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={Text}\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: props.mode === \"dark\" ? \"#273947\" : \"white\",\r\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n            }}\r\n            id=\"myBox\"\r\n            rows=\"9\"\r\n          ></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>\r\n          Convert to UPPER-CASE\r\n        </button>\r\n\r\n        <button className=\"btn btn-secondary mx-1 \" onClick={handleDownClick}>\r\n          Convert to lower-case\r\n        </button>\r\n\r\n        <button className=\"btn btn-warning mx-1 \" onClick={handleTitleClick}>\r\n          Convert to Title-Case\r\n        </button>\r\n\r\n        <button className=\"btn btn-danger mx-1 \" onClick={handleClearClick}>\r\n          Clear Text\r\n        </button>\r\n      </div>\r\n\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          color: props.mode === \"dark\" ? \"white\" : \"black\",\r\n        }}\r\n      >\r\n        <h3 className=\"my-3\">Your Text Summary</h3>\r\n        <p>\r\n          {Text.length > 0 ? Text.trim().split(\" \").length : 0} Words And{\" \"}\r\n          {Text.length > 0 ? Text.trim().length : 0} Characters\r\n        </p>\r\n        <p>{0.008 * Text.split(\" \").length} Minutes Read</p>\r\n        <h4>Preview</h4>\r\n        <p>\r\n          {Text.length > 0\r\n            ? Text\r\n            : \"Enter Something in the Textbox above to preview\"}\r\n        </p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nfunction Alert(props) {\r\n  const capitalize = (word) => {\r\n    const lower = word.toLowerCase();\r\n    return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n  };\r\n  return (\r\n    props.alert && (\r\n      <div\r\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n        role=\"alert\"\r\n      >\r\n        <strong>{capitalize(props.alert.type)}</strong> : {props.alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n}\r\n\r\nexport default Alert;\r\n","import \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\n// import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\"); // Whether dark mode is enabled or disabled\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#273947\";\n      showAlert(\"Dark Mode is enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode is enabled\", \"success\");\n    }\n  };\n  // const toggleMode1 = () => {\n  //   if (mode === \"light\") {\n  //     setMode(\"dark\");\n  //     document.body.style.backgroundColor = \"#0e4505\";\n  //     showAlert(\"Blue Mode is enabled\", \"success\");\n  //   } else {\n  //     setMode(\"light\");\n  //     document.body.style.backgroundColor = \"white\";\n  //     showAlert(\"Light Mode is enabled\", \"success\");\n  //   }\n  // };\n  return (\n    <>\n      {/* <Router> */}\n      <Navbar\n        title=\"EhsanKhanApp\"\n        mode={mode}\n        toggleMode={toggleMode}\n        AboutText=\"About\"\n        // toggleMode1={toggleMode1}\n      />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        {/* <Switch> */}\n        {/* <Route exact path=\"/about\"> */}\n        {/* <About /> */}\n        {/* </Route> */}\n        {/* <Route exact path=\"/\"> */}\n        <TextForm Heading=\"Enter the text Here\" mode={mode} />\n        {/* </Route> */}\n        {/* </Switch> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}